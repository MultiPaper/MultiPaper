From 0000000000000000000000000000000000000000 Mon Sep 17 00:00:00 2001
From: DoctaEnkoda <bierquejason@gmail.com>
Date: Tue, 3 Jan 2023 03:35:42 +0100
Subject: [PATCH] Event When Player Join Leave

Add PlayerLeaveExternalServerEvent when Player Leave an External Server
Add PlayerJoinExternalServerEvent when Player Join an External Server

Beware, this does not replace PlayerJoinEvent and PlayerQuitEvent but still allows to know when a player leaves a server on another instance.

diff --git a/src/main/java/puregero/multipaper/MultiPaperEnderChestHandler.java b/src/main/java/puregero/multipaper/MultiPaperEnderChestHandler.java
index d8074c83ab7d10c14e59f86402b724877dedfb67..a56c3727c3590037134af2fd8b17d821b35c3387 100644
--- a/src/main/java/puregero/multipaper/MultiPaperEnderChestHandler.java
+++ b/src/main/java/puregero/multipaper/MultiPaperEnderChestHandler.java
@@ -29,17 +29,16 @@ public class MultiPaperEnderChestHandler implements ContainerListener {
             sentItems = new ItemStack[container.getContainerSize()];
         }
 
-        if (!player.didPlayerJoinEvent) {
-            if (isScheduled == null && broadcastChanges && player.server.getPlayerList().getActivePlayer(player.getUUID()) == player) {
-                // Wait till they join to broadcast changes
-                isScheduled = ((CraftScheduler) Bukkit.getScheduler()).scheduleInternalTask(() -> {
-                    isScheduled = null;
-                    containerChanged(container);
-                }, 1, "MultiPaperEnderChestHandler-containerChanged");
-            }
+        if (isScheduled == null && broadcastChanges && player.server.getPlayerList().getPlayer(player.getUUID()) == player) {
+            // Wait till they join to broadcast changes
+            isScheduled = ((CraftScheduler) Bukkit.getScheduler()).scheduleInternalTask(() -> {
+                isScheduled = null;
+                containerChanged(container);
+            }, 1, "MultiPaperEnderChestHandler-containerChanged");
             return;
         }
 
+
         isScheduled = null;
 
         CompoundTag itemsRoot = new CompoundTag();
diff --git a/src/main/java/puregero/multipaper/MultiPaperInventoryHandler.java b/src/main/java/puregero/multipaper/MultiPaperInventoryHandler.java
index faba13c2fb9f61dfaece07370608782f1cbc5ad9..9b65e9b10cb69bce8d8f29ab90222c14bf7331df 100644
--- a/src/main/java/puregero/multipaper/MultiPaperInventoryHandler.java
+++ b/src/main/java/puregero/multipaper/MultiPaperInventoryHandler.java
@@ -291,10 +291,6 @@ public class MultiPaperInventoryHandler {
     }
 
     public static void broadcastComponentChanges(ServerPlayer player, NonNullListFilter<? extends ItemStack> inventoryComponent) {
-        if (!player.didPlayerJoinEvent) {
-            // Don't update the inventory until they fully join
-            return;
-        }
 
         if (inventoryComponent.isDirty) {
             inventoryComponent.isDirty = false;
diff --git a/src/main/java/puregero/multipaper/externalserverprotocol/PlayerCreatePacket.java b/src/main/java/puregero/multipaper/externalserverprotocol/PlayerCreatePacket.java
index f7fa7916c43f8fa2bd5f30e017c803d42309b085..a40ba8ad3b608ab4668990b976aac94b1404e7f3 100644
--- a/src/main/java/puregero/multipaper/externalserverprotocol/PlayerCreatePacket.java
+++ b/src/main/java/puregero/multipaper/externalserverprotocol/PlayerCreatePacket.java
@@ -12,8 +12,11 @@ import net.minecraft.world.entity.HumanoidArm;
 import net.minecraft.world.level.GameType;
 import org.apache.logging.log4j.LogManager;
 import org.apache.logging.log4j.Logger;
+import org.bukkit.Bukkit;
 import org.bukkit.event.player.PlayerKickEvent;
 import puregero.multipaper.*;
+import puregero.multipaper.config.MultiPaperConfiguration;
+import puregero.multipaper.event.player.PlayerJoinExternalServerEvent;
 
 import java.net.InetAddress;
 import java.net.InetSocketAddress;
@@ -145,6 +148,8 @@ public class PlayerCreatePacket extends ExternalServerPacket {
             ExternalPlayer player = ExternalPlayer.create(connection, gameProfile, world, x, y, z, yaw, pitch, gamemode, address, advancements, stats, entityId);
             player.getBukkitEntity().data = data;
             player.getBukkitEntity().persistentData = persistentData;
+            PlayerJoinExternalServerEvent playerJoinExternalServerEvent = new PlayerJoinExternalServerEvent(gameProfile.getId(), gameProfile.getName(), MultiPaperConfiguration.get().masterConnection.myName);
+            Bukkit.getPluginManager().callEvent(playerJoinExternalServerEvent);
         });
     }
 
diff --git a/src/main/java/puregero/multipaper/externalserverprotocol/PlayerRemovePacket.java b/src/main/java/puregero/multipaper/externalserverprotocol/PlayerRemovePacket.java
index d5853995ed4774799475e5f1c156d5814e524c9d..28b1190e304b937468be426dcba17ef4ec727e36 100644
--- a/src/main/java/puregero/multipaper/externalserverprotocol/PlayerRemovePacket.java
+++ b/src/main/java/puregero/multipaper/externalserverprotocol/PlayerRemovePacket.java
@@ -6,9 +6,12 @@ import net.minecraft.server.MinecraftServer;
 import net.minecraft.server.level.ServerPlayer;
 import org.apache.logging.log4j.LogManager;
 import org.apache.logging.log4j.Logger;
+import org.bukkit.Bukkit;
 import org.bukkit.event.player.PlayerKickEvent;
 import puregero.multipaper.ExternalServerConnection;
 import puregero.multipaper.MultiPaper;
+import puregero.multipaper.config.MultiPaperConfiguration;
+import puregero.multipaper.event.player.PlayerLeaveExternalServerEvent;
 
 import java.util.UUID;
 
@@ -44,6 +47,8 @@ public class PlayerRemovePacket extends ExternalServerPacket {
             }
 
             player.connection.disconnect(EXTERNAL_DISCONNECT_COMPONENT, PlayerKickEvent.Cause.TIMEOUT);
+            PlayerLeaveExternalServerEvent playerLeaveExternalServerEvent = new PlayerLeaveExternalServerEvent(player.getGameProfile().getId(), player.getGameProfile().getName(), MultiPaperConfiguration.get().masterConnection.myName);
+            Bukkit.getPluginManager().callEvent(playerLeaveExternalServerEvent);
         });
     }
 }
