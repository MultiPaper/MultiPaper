From 0000000000000000000000000000000000000000 Mon Sep 17 00:00:00 2001
From: PureGero <puregero@gmail.com>
Date: Fri, 24 Dec 2021 23:23:42 +1000
Subject: [PATCH] Add /mpmap


diff --git a/src/main/java/org/bukkit/craftbukkit/command/CraftCommandMap.java b/src/main/java/org/bukkit/craftbukkit/command/CraftCommandMap.java
index 4e86da4e5f8af5ab6e07f846545f7b4e51e629aa..dc9d2b7ff44b0ca31ab1b6e6258795c7df114f40 100644
--- a/src/main/java/org/bukkit/craftbukkit/command/CraftCommandMap.java
+++ b/src/main/java/org/bukkit/craftbukkit/command/CraftCommandMap.java
@@ -5,6 +5,7 @@ import org.bukkit.Server;
 import org.bukkit.command.Command;
 import org.bukkit.command.SimpleCommandMap;
 import puregero.multipaper.commands.MPDebugCommand;
+import puregero.multipaper.commands.MPMapCommand;
 import puregero.multipaper.commands.ServersCommand;
 
 public class CraftCommandMap extends SimpleCommandMap {
@@ -25,6 +26,7 @@ public class CraftCommandMap extends SimpleCommandMap {
     private void setDefaultCommands() {
         register("multipaper", new MPDebugCommand("mpdebug"));
         register("multipaper", new ServersCommand("servers"));
+        register("multipaper", new MPMapCommand("mpmap"));
     }
     // MultiPaper end
 
diff --git a/src/main/java/puregero/multipaper/commands/MPMapCommand.java b/src/main/java/puregero/multipaper/commands/MPMapCommand.java
new file mode 100644
index 0000000000000000000000000000000000000000..fe24b18dd90c0d6ded933b19d27e67750386ae0f
--- /dev/null
+++ b/src/main/java/puregero/multipaper/commands/MPMapCommand.java
@@ -0,0 +1,88 @@
+package puregero.multipaper.commands;
+
+import io.papermc.paper.chunk.system.scheduling.NewChunkHolder;
+import net.kyori.adventure.text.Component;
+import net.kyori.adventure.text.event.HoverEvent;
+import net.kyori.adventure.text.format.NamedTextColor;
+import org.bukkit.ChatColor;
+import org.bukkit.command.Command;
+import org.bukkit.command.CommandSender;
+import org.bukkit.craftbukkit.entity.CraftPlayer;
+import org.bukkit.entity.Player;
+import org.jetbrains.annotations.NotNull;
+import puregero.multipaper.MultiPaper;
+
+public class MPMapCommand extends Command {
+
+    public MPMapCommand(String command) {
+        super(command);
+        setPermission("multipaper.command.mpmap");
+    }
+
+    @Override
+    public boolean execute(@NotNull CommandSender sender, @NotNull String commandLabel, String[] args) {
+        if (!testPermission(sender)) return false;
+
+        if (!(sender instanceof Player player)) {
+            sender.sendMessage(ChatColor.RED + "Only players can execute this command.");
+            return false;
+        }
+
+        int radius = 8;
+
+        sendMap(player, radius);
+
+        return true;
+    }
+
+    private void sendMap(Player player, int radius) {
+        sendHeader(player, radius);
+        for (int row = -radius; row <= radius; row++) {
+            sendRow(player, radius, row);
+        }
+        sendHeader(player, radius);
+    }
+
+    private NewChunkHolder getChunkHolder(Player player, int x, int z) {
+        return MultiPaper.getChunkHolder(player.getWorld().getName(), ((CraftPlayer) player).getHandle().blockPosition().offset(x << 4, 0, z << 4));
+    }
+
+    private void sendRow(Player player, int radius, int row) {
+        Component component = Component.text(" | ").color(NamedTextColor.GOLD);
+
+        int i = -radius;
+        while (i <= radius) {
+            StringBuilder builder = new StringBuilder();
+            NewChunkHolder newChunkHolder = getChunkHolder(player, row, i);
+            String name = newChunkHolder == null || newChunkHolder.externalOwner == null ? null : newChunkHolder.externalOwner.getName();
+            NamedTextColor color = newChunkHolder == null ? NamedTextColor.DARK_GRAY : (newChunkHolder.externalOwner == null ? NamedTextColor.WHITE : (newChunkHolder.externalOwner.isMe() ? NamedTextColor.AQUA : NamedTextColor.RED));
+
+            while (i <= radius) {
+                NewChunkHolder newChunkHolder2 = getChunkHolder(player, row, i);
+
+                if ((newChunkHolder2 == null && newChunkHolder != null) || (newChunkHolder2 != null && newChunkHolder == null) || (newChunkHolder != null && newChunkHolder2.externalOwner != newChunkHolder.externalOwner)) {
+                    break;
+                }
+
+                builder.append(row == 0 && i == 0 ? "\u25A0 " : "+ ");
+
+                i++;
+            }
+
+            Component innerComponent = Component.text(builder.toString()).color(color);
+
+            if (name != null) {
+                innerComponent = innerComponent.hoverEvent(HoverEvent.showText(Component.text(name).color(color)));
+            }
+
+            component = component.append(innerComponent);
+        }
+
+        component = component.append(Component.text("| ").color(NamedTextColor.GOLD));
+        player.sendMessage(component);
+    }
+
+    private void sendHeader(Player player, int radius) {
+        player.sendMessage(Component.text("+ " + "- ".repeat(radius * 2 + 1) + "+").color(NamedTextColor.GOLD));
+    }
+}
diff --git a/src/main/java/puregero/multipaper/permissions/MultiPaperCommandPermissions.java b/src/main/java/puregero/multipaper/permissions/MultiPaperCommandPermissions.java
index 546da05992c945e90545bcd0d3f2cb5c2c4dbb03..a21628f28a803ca2329b7f63257dad16829fe7f6 100644
--- a/src/main/java/puregero/multipaper/permissions/MultiPaperCommandPermissions.java
+++ b/src/main/java/puregero/multipaper/permissions/MultiPaperCommandPermissions.java
@@ -14,6 +14,7 @@ public class MultiPaperCommandPermissions {
 
         DefaultPermissions.registerPermission(PREFIX + "servers", "List details about servers running on this MultiPaper network", PermissionDefault.TRUE, commands);
         DefaultPermissions.registerPermission(PREFIX + "mpdebug", "MPDebug command", PermissionDefault.TRUE, commands);
+        DefaultPermissions.registerPermission(PREFIX + "mpmap", "MPMap command", PermissionDefault.TRUE, commands);
 
         commands.recalculatePermissibles();
     }
