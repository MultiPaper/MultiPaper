From 0000000000000000000000000000000000000000 Mon Sep 17 00:00:00 2001
From: PureGero <puregero@gmail.com>
Date: Thu, 30 Dec 2021 22:43:43 +1000
Subject: [PATCH] Sync player list name


diff --git a/src/main/java/org/bukkit/craftbukkit/entity/CraftPlayer.java b/src/main/java/org/bukkit/craftbukkit/entity/CraftPlayer.java
index 1b8f680af08cce5c7cc3cabef44783a14b089444..dbceca4df6a7cad64ec78703cd462d74b00fb1e3 100644
--- a/src/main/java/org/bukkit/craftbukkit/entity/CraftPlayer.java
+++ b/src/main/java/org/bukkit/craftbukkit/entity/CraftPlayer.java
@@ -160,6 +160,7 @@ import net.md_5.bungee.api.chat.BaseComponent; // Spigot
 import puregero.multipaper.ExternalPlayer;
 import puregero.multipaper.MultiPaper;
 import puregero.multipaper.externalserverprotocol.PlayerDataUpdatePacket;
+import puregero.multipaper.externalserverprotocol.PlayerListNameUpdatePacket;
 import puregero.multipaper.externalserverprotocol.PlayerSayChatPacket;
 
 @DelegateDeserialization(CraftOfflinePlayer.class)
@@ -520,6 +521,7 @@ public class CraftPlayer extends CraftHumanEntity implements Player {
                 player.connection.send(new ClientboundPlayerInfoUpdatePacket(ClientboundPlayerInfoUpdatePacket.Action.UPDATE_DISPLAY_NAME, getHandle()));
             }
         }
+        MultiPaper.broadcastPacketToExternalServers(getHandle(), new PlayerListNameUpdatePacket(getHandle())); // MultiPaper
     }
     @Override
     public net.kyori.adventure.text.Component playerListName() {
@@ -555,6 +557,7 @@ public class CraftPlayer extends CraftHumanEntity implements Player {
                 player.connection.send(new ClientboundPlayerInfoUpdatePacket(ClientboundPlayerInfoUpdatePacket.Action.UPDATE_DISPLAY_NAME, this.getHandle()));
             }
         }
+        MultiPaper.broadcastPacketToExternalServers(getHandle(), new PlayerListNameUpdatePacket(getHandle())); // MultiPaper
     }
 
     private net.kyori.adventure.text.Component playerListHeader; // Paper - Adventure
diff --git a/src/main/java/puregero/multipaper/externalserverprotocol/ExternalServerPacketSerializer.java b/src/main/java/puregero/multipaper/externalserverprotocol/ExternalServerPacketSerializer.java
index 33375df7a8431f71b0573726c1cfc1de78023810..c98c3235a7f82fafaf084a59f8b4fab62c9ecc91 100644
--- a/src/main/java/puregero/multipaper/externalserverprotocol/ExternalServerPacketSerializer.java
+++ b/src/main/java/puregero/multipaper/externalserverprotocol/ExternalServerPacketSerializer.java
@@ -60,6 +60,7 @@ public class ExternalServerPacketSerializer {
         addPacket(WeatherUpdatePacket.class, WeatherUpdatePacket::new);
         addPacket(PlayerStatsIncreasePacket.class, PlayerStatsIncreasePacket::new);
         addPacket(PlayerExperienceUpdatePacket.class, PlayerExperienceUpdatePacket::new);
+        addPacket(PlayerListNameUpdatePacket.class, PlayerListNameUpdatePacket::new);
     }
 
     private static void addPacket(Class<? extends ExternalServerPacket> clazz, Function<FriendlyByteBuf, ExternalServerPacket> deserializer) {
diff --git a/src/main/java/puregero/multipaper/externalserverprotocol/PlayerCreatePacket.java b/src/main/java/puregero/multipaper/externalserverprotocol/PlayerCreatePacket.java
index a40f61fa1925dcce142d80eca9faea50a71278cb..f67ceb93ee14ed6ec61253bc13e0e05d42919e27 100644
--- a/src/main/java/puregero/multipaper/externalserverprotocol/PlayerCreatePacket.java
+++ b/src/main/java/puregero/multipaper/externalserverprotocol/PlayerCreatePacket.java
@@ -158,6 +158,7 @@ public class PlayerCreatePacket extends ExternalServerPacket {
         send(new PlayerActionPacket(player, new ServerboundSetCarriedItemPacket(player.getInventory().selected)), connections);
         send(new EntityUpdatePacket(player, new ClientboundSetEntityDataPacket(player.getId(), player.getEntityData().getAll())), connections);
         send(new PlayerFoodUpdatePacket(player), connections);
+        send(new PlayerListNameUpdatePacket(player), connections);
 
         MultiPaperInventoryHandler.sendFullInventoryUpdate(player, connections);
         MultiPaperEnderChestHandler.sendFullEnderChestUpdate(player, connections);
diff --git a/src/main/java/puregero/multipaper/externalserverprotocol/PlayerListNameUpdatePacket.java b/src/main/java/puregero/multipaper/externalserverprotocol/PlayerListNameUpdatePacket.java
new file mode 100644
index 0000000000000000000000000000000000000000..aab884bd07c93321ce857fc10b7a35d5d356c9bc
--- /dev/null
+++ b/src/main/java/puregero/multipaper/externalserverprotocol/PlayerListNameUpdatePacket.java
@@ -0,0 +1,50 @@
+package puregero.multipaper.externalserverprotocol;
+
+import net.minecraft.network.FriendlyByteBuf;
+import net.minecraft.network.chat.Component;
+import net.minecraft.network.protocol.game.ClientboundPlayerInfoUpdatePacket;
+import net.minecraft.server.MinecraftServer;
+import net.minecraft.server.level.ServerPlayer;
+import puregero.multipaper.ExternalServerConnection;
+import puregero.multipaper.MultiPaper;
+
+import java.util.UUID;
+
+public class PlayerListNameUpdatePacket extends ExternalServerPacket {
+
+    private final UUID uuid;
+    private final Component listName;
+
+    public PlayerListNameUpdatePacket(ServerPlayer player) {
+        this.uuid = player.getUUID();
+        this.listName = player.listName;
+    }
+
+    public PlayerListNameUpdatePacket(FriendlyByteBuf in) {
+        uuid = in.readUUID();
+        listName = Component.Serializer.fromJson(in.readUtf());
+    }
+
+    @Override
+    public void write(FriendlyByteBuf out) {
+        out.writeUUID(uuid);
+        out.writeUtf(Component.Serializer.toJson(listName));
+    }
+
+    @Override
+    public void handle(ExternalServerConnection connection) {
+        MultiPaper.runSync(() -> {
+            ServerPlayer player = MinecraftServer.getServer().getPlayerList().getPlayer(uuid);
+
+            if (player != null) {
+                player.listName = listName;
+
+                for (ServerPlayer receiver : player.server.getPlayerList().players) {
+                    if (MultiPaper.isRealPlayer(receiver) && receiver.getBukkitEntity().canSee(player.getBukkitEntity())) {
+                        receiver.connection.send(new ClientboundPlayerInfoUpdatePacket(ClientboundPlayerInfoUpdatePacket.Action.UPDATE_DISPLAY_NAME, player));
+                    }
+                }
+            }
+        });
+    }
+}
