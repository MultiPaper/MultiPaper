From 0000000000000000000000000000000000000000 Mon Sep 17 00:00:00 2001
From: PureGero <puregero@gmail.com>
Date: Mon, 13 Dec 2021 22:55:54 +1000
Subject: [PATCH] Forward sign editing


diff --git a/src/main/java/net/minecraft/server/network/ServerGamePacketListenerImpl.java b/src/main/java/net/minecraft/server/network/ServerGamePacketListenerImpl.java
index 9277e8393f1cf7877cc3d10e1a0dd0d05670d163..4bcb91ef1f054b60907c3e805f0478ca7aadd619 100644
--- a/src/main/java/net/minecraft/server/network/ServerGamePacketListenerImpl.java
+++ b/src/main/java/net/minecraft/server/network/ServerGamePacketListenerImpl.java
@@ -249,6 +249,7 @@ import puregero.multipaper.MultiPaperAckBlockChangesHandler;
 import puregero.multipaper.MultiPaperEntityInteractHandler;
 import puregero.multipaper.MultiPaperInventoryHandler;
 import puregero.multipaper.MultiPaperPlayerHandler;
+import puregero.multipaper.MultiPaperSignHandler;
 import puregero.multipaper.externalserverprotocol.PlayerActionPacket;
 import puregero.multipaper.externalserverprotocol.PlayerRemovePacket;
 // CraftBukkit end
@@ -3542,6 +3543,7 @@ public class ServerGamePacketListenerImpl implements ServerPlayerConnection, Tic
 
     @Override
     public void handleSignUpdate(ServerboundSignUpdatePacket packet) {
+        if (MultiPaperSignHandler.handleSignUpdate(this.player, packet)) return;
         // Paper start - cap line length - modified clients can send longer data than normal
         String[] lines = packet.getLines();
         for (int i = 0; i < lines.length; ++i) {
diff --git a/src/main/java/puregero/multipaper/MultiPaperSignHandler.java b/src/main/java/puregero/multipaper/MultiPaperSignHandler.java
new file mode 100644
index 0000000000000000000000000000000000000000..d22f5f6b1ab0e88f06e60b56c423e1520c8f2106
--- /dev/null
+++ b/src/main/java/puregero/multipaper/MultiPaperSignHandler.java
@@ -0,0 +1,23 @@
+package puregero.multipaper;
+
+import net.minecraft.network.protocol.game.ServerboundSignUpdatePacket;
+import net.minecraft.server.level.ServerPlayer;
+import net.minecraft.world.level.chunk.LevelChunk;
+import puregero.multipaper.externalserverprotocol.PlayerActionPacket;
+
+public class MultiPaperSignHandler {
+
+    /**
+     * Returns true if the sign update should be cancelled
+     */
+    public static boolean handleSignUpdate(ServerPlayer player, ServerboundSignUpdatePacket packet) {
+        LevelChunk chunk = player.level.getChunkIfLoaded(packet.getPos());
+        if (MultiPaper.isChunkExternal(chunk)) {
+            chunk.externalOwner.getConnection().send(new PlayerActionPacket(player, packet));
+            return true;
+        }
+
+        return false;
+    }
+
+}
