From 0000000000000000000000000000000000000000 Mon Sep 17 00:00:00 2001
From: PureGero <puregero@gmail.com>
Date: Thu, 25 Nov 2021 21:43:06 +1000
Subject: [PATCH] Add /mpdebug


diff --git a/src/main/java/org/bukkit/craftbukkit/command/CraftCommandMap.java b/src/main/java/org/bukkit/craftbukkit/command/CraftCommandMap.java
index fa03c956d06f3b093545e2861a23c67b3cfff8f5..4e86da4e5f8af5ab6e07f846545f7b4e51e629aa 100644
--- a/src/main/java/org/bukkit/craftbukkit/command/CraftCommandMap.java
+++ b/src/main/java/org/bukkit/craftbukkit/command/CraftCommandMap.java
@@ -4,6 +4,7 @@ import java.util.Map;
 import org.bukkit.Server;
 import org.bukkit.command.Command;
 import org.bukkit.command.SimpleCommandMap;
+import puregero.multipaper.commands.MPDebugCommand;
 import puregero.multipaper.commands.ServersCommand;
 
 public class CraftCommandMap extends SimpleCommandMap {
@@ -22,6 +23,7 @@ public class CraftCommandMap extends SimpleCommandMap {
     }
 
     private void setDefaultCommands() {
+        register("multipaper", new MPDebugCommand("mpdebug"));
         register("multipaper", new ServersCommand("servers"));
     }
     // MultiPaper end
diff --git a/src/main/java/puregero/multipaper/commands/MPDebugCommand.java b/src/main/java/puregero/multipaper/commands/MPDebugCommand.java
new file mode 100644
index 0000000000000000000000000000000000000000..604cd268a953fe13de5a7ece87ed1c9b89435e6a
--- /dev/null
+++ b/src/main/java/puregero/multipaper/commands/MPDebugCommand.java
@@ -0,0 +1,105 @@
+package puregero.multipaper.commands;
+
+import io.papermc.paper.chunk.system.scheduling.NewChunkHolder;
+import net.kyori.adventure.text.Component;
+import net.kyori.adventure.text.format.NamedTextColor;
+import net.minecraft.core.BlockPos;
+import net.minecraft.world.level.chunk.LevelChunk;
+import net.minecraft.world.phys.Vec3;
+import org.bukkit.*;
+import org.bukkit.command.Command;
+import org.bukkit.command.CommandSender;
+import org.bukkit.craftbukkit.CraftWorld;
+import org.bukkit.craftbukkit.entity.CraftPlayer;
+import org.bukkit.craftbukkit.scheduler.CraftScheduler;
+import org.bukkit.entity.Player;
+import org.bukkit.scheduler.BukkitTask;
+import org.jetbrains.annotations.NotNull;
+import puregero.multipaper.ExternalServer;
+import puregero.multipaper.MultiPaper;
+
+import java.util.HashSet;
+import java.util.Iterator;
+
+public class MPDebugCommand extends Command implements Runnable {
+    private final HashSet<Player> debugEnabled = new HashSet<>();
+    private BukkitTask task = null;
+
+    public MPDebugCommand(String command) {
+        super(command);
+        setPermission("multipaper.command.mpdebug");
+    }
+
+    @Override
+    public boolean execute(@NotNull CommandSender sender, @NotNull String commandLabel, String[] args) {
+        if (!testPermission(sender)) return false;
+
+        if (!(sender instanceof Player player)) {
+            sender.sendMessage(ChatColor.RED + "Only players can execute this command.");
+            return false;
+        }
+
+        if (debugEnabled.remove(player)) {
+            player.sendMessage("MultiPaper debug disabled");
+            return false;
+        }
+
+        debugEnabled.add(player);
+
+        sender.sendMessage("MultiPaper debug enabled");
+
+        if (task == null) {
+            run();
+        }
+
+        return true;
+    }
+
+    @Override
+    public void run() {
+        task = null;
+
+        Iterator<Player> iterator = debugEnabled.iterator();
+        while (iterator.hasNext()) {
+            Player player = iterator.next();
+
+            if (!player.isOnline()) {
+                iterator.remove();
+                continue;
+            }
+
+            run(player);
+        }
+
+        if (!debugEnabled.isEmpty()) {
+            task = ((CraftScheduler) Bukkit.getScheduler()).scheduleInternalTask(this, 5, "MultiPaper debug");
+        }
+    }
+
+    private void run(Player player) {
+        NewChunkHolder newChunkHolder = MultiPaper.getChunkHolder(((CraftPlayer) player).getHandle());
+
+        if (newChunkHolder != null) {
+            ExternalServer owner = newChunkHolder.externalOwner;
+            player.sendActionBar(Component.text(owner == null ? "null" : owner.getName()).color(owner == null ? NamedTextColor.WHITE : (owner.isMe() ? NamedTextColor.AQUA : NamedTextColor.RED)));
+        }
+
+        for (double x = -2; x <= 2; x += 0.5) {
+            for (double z = -2; z <= 2; z += 0.5) {
+                Vec3 vec = ((CraftPlayer) player).getHandle().position().add(x, 0.5, z);
+                BlockPos pos = new BlockPos(vec);
+                LevelChunk levelChunk = ((CraftWorld) player.getWorld()).getHandle().getChunkIfLoaded(pos);
+                Color color;
+                if (MultiPaper.isChunkExternal(levelChunk)) {
+                    color = Color.RED;
+                } else if (MultiPaper.isChunkLocal(levelChunk)) {
+                    color = Color.AQUA;
+                } else {
+                    // Chunk has no owner, this shouldn't be possible if the player's right up in its face
+                    color = Color.WHITE;
+                }
+                player.spawnParticle(Particle.REDSTONE, vec.x, vec.y, vec.z, 1, new Particle.DustOptions(color, 1));
+            }
+        }
+    }
+}
diff --git a/src/main/java/puregero/multipaper/permissions/MultiPaperCommandPermissions.java b/src/main/java/puregero/multipaper/permissions/MultiPaperCommandPermissions.java
index b7eb85651189c54cf380c150678761ebb56778c2..546da05992c945e90545bcd0d3f2cb5c2c4dbb03 100644
--- a/src/main/java/puregero/multipaper/permissions/MultiPaperCommandPermissions.java
+++ b/src/main/java/puregero/multipaper/permissions/MultiPaperCommandPermissions.java
@@ -13,6 +13,7 @@ public class MultiPaperCommandPermissions {
         Permission commands = DefaultPermissions.registerPermission(ROOT, "Gives the user the ability to use all MultiPaper commands", parent);
 
         DefaultPermissions.registerPermission(PREFIX + "servers", "List details about servers running on this MultiPaper network", PermissionDefault.TRUE, commands);
+        DefaultPermissions.registerPermission(PREFIX + "mpdebug", "MPDebug command", PermissionDefault.TRUE, commands);
 
         commands.recalculatePermissibles();
     }
